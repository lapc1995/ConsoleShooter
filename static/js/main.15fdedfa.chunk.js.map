{"version":3,"sources":["App.js","serviceWorker.js","ConsoleShooter.js","index.js","logo.svg"],"names":["Component","Boolean","window","location","hostname","match","ConsoleShooterRenderer","props","console","log","lines","Array","line","i","screen","length","width","push","react_default","a","createElement","MiniMap","map","Math","floor","y","x","ConsoleShooter","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","playerX","playerY","playerA","onKeyPressed","bind","assertThisInitialized","mapHeight","mapWidth","fov","depth","document","addEventListener","removeEventListener","e","new_playerA","new_playerX","new_playerY","key","aux_playerX","sin","aux_playerY","cos","setState","new_screen","height","fill","rayAngle","distanceToWall","hitWall","hitBoundry","eyeX","eyeY","testX","testY","p","tx","ty","vy","vx","d","sqrt","dot","sort","b","acos","ceiling","shade","j","style","float","React","ReactDOM","render","src_ConsoleShooter","w","h","getElementById","innerHeight","innerWidth","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.15fdedfa.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\n\r\nclass ConsoleShooter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            playerX : 8.0,\r\n            playerY : 8.0,\r\n            playerA : 0.0,\r\n        }\r\n        this.onKeyPressed = this.onKeyPressed.bind(this);\r\n        this.mapHeight = 16;\r\n        this.mapWidth = 16;\r\n        this.fov = 3.14159 / 4.0;\r\n        this.depth = 16.0;\r\n\r\n        this.map = '';\r\n\r\n        this.map += '################';\r\n        this.map += '#..............#';\r\n        this.map += '#..............#';\r\n        this.map += '#..............#';\r\n        this.map += '#..............#';\r\n        this.map += '#..............#';\r\n        this.map += '#..............#';\r\n        this.map += '#..............#';\r\n        this.map += '#..............#';\r\n        this.map += '#..............#';\r\n        this.map += '#..............#';\r\n        this.map += '#......#.......#';\r\n        this.map += '#..............#';\r\n        this.map += '#..............#';\r\n        this.map += '#..............#';\r\n        this.map += '################';\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", this.onKeyPressed, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.onKeyPressed, false);\r\n    }\r\n\r\n    onKeyPressed(e) {\r\n        var new_playerA = this.state.playerA;\r\n        var new_playerX = this.state.playerX;\r\n        var new_playerY = this.state.playerY;\r\n        if(e.key === 'a')\r\n            new_playerA -= 0.1;\r\n        else if(e.key === 'd')\r\n            new_playerA += 0.1;\r\n        else if(e.key === 'w') {\r\n            var aux_playerX = new_playerX + Math.sin(new_playerA) * 2.0;\r\n            var aux_playerY = new_playerY + Math.cos(new_playerA) * 2.0;\r\n\r\n            if(!(this.map[Math.floor(aux_playerY) * this.mapWidth + Math.floor(aux_playerX )] == '#')) {\r\n                new_playerX = aux_playerX;\r\n                new_playerY = aux_playerY;\r\n            } \r\n\r\n\r\n        } else if(e.key === 's') {\r\n            var aux_playerX = new_playerX - Math.sin(new_playerA) * 2.0;\r\n            var aux_playerY = new_playerY - Math.cos(new_playerA) * 2.0;\r\n            if(!(this.map[Math.floor(aux_playerY) * this.mapWidth + Math.floor(aux_playerX )] == '#')) {\r\n                new_playerX = aux_playerX;\r\n                new_playerY = aux_playerY;\r\n            } \r\n        }\r\n\r\n        this.setState({\r\n            playerA: new_playerA,\r\n            playerX: new_playerX,\r\n            playerY : new_playerY,\r\n        });\r\n        \r\n    }\r\n\r\n    render() {\r\n        \r\n            var new_screen = new Array(this.props.height * this.props.width).fill('\\xa0');\r\n            \r\n            for(var i = 0; i < this.props.width; i++) {\r\n                var rayAngle = (this.state.playerA - this.fov / 2.0) + ((i * 1.0) / (this.props.width * 1.0)) * this.fov;\r\n                \r\n                var distanceToWall = 0.0;\r\n                var hitWall = false;\r\n                var hitBoundry = false;\r\n\r\n                var eyeX = Math.sin(rayAngle);\r\n                var eyeY = Math.cos(rayAngle);\r\n\r\n                while(!hitWall && distanceToWall < this.depth) {\r\n                    distanceToWall += 0.1;\r\n                    var testX = Math.floor(this.state.playerX + eyeX * distanceToWall)\r\n                    var testY = Math.floor(this.state.playerY + eyeY * distanceToWall)\r\n\r\n                    if (testX < 0 || testY >= this.mapWidth || testY < 0 || testY >= this.mapHeight) {\r\n                        hitWall = true;\r\n                        distanceToWall = this.depth;\r\n                    } else {\r\n                        if (this.map[testY * this.mapWidth + testX] == '#') {\r\n                            hitWall = true;\r\n\r\n                            var p = []; // distance , dot\r\n                            for(var tx = 0; tx < 2; tx++) {\r\n                                for(var ty = 0; ty < 2; ty++) {\r\n                                    var vy = (1.0 * testY) + ty - this.state.playerY;\r\n                                    var vx = (1.0 * testX) + tx - this.state.playerX;\r\n                                    var d = Math.sqrt(vx*vx + vy*vy);\r\n                                    var dot = (eyeX * vx / d) + (eyeY * vy / d);\r\n                                    p.push([d, dot]);\r\n                                }\r\n                            }\r\n\r\n                            p = p.sort(function(a, b) {return a[0] < b[0]});\r\n\r\n                            var bound = 0.01;\r\n                            if(Math.acos(p[0][1]) < bound)\r\n                                hitBoundry = true;\r\n                            if(Math.acos(p[1][1]) < bound)\r\n                                hitBoundry = true;\r\n                            //if(Math.acos(p[2][1]) < bound)\r\n                            //    hitBoundry = true;\r\n\r\n\r\n                        }\r\n                    }\r\n                }\r\n\r\n                var ceiling = (this.props.height / 2.0) - this.props.height / (1.0 * distanceToWall);\r\n                var floor = this.props.height - ceiling;\r\n\r\n                var shade = '\\xa0';\r\n                if(distanceToWall <= this.depth / 4.0) \r\n                    shade = '\\u2588';\r\n                else if(distanceToWall < this.depth / 3.0) \r\n                    shade = '\\u2593';\r\n                else if(distanceToWall < this.depth / 2.0) \r\n                    shade = '\\u2592';\r\n                else if(distanceToWall < this.depth / 1.0) \r\n                    shade = '\\u2591';\r\n                else\r\n                    shade = '\\xa0';\r\n\r\n                if(hitBoundry)\r\n                    shade = '\\xa0';\r\n\r\n                for(var j = 0; j < this.props.height; j++) {\r\n                    if(j <= ceiling) {\r\n                        new_screen[j*this.props.width+i] = '\\xa0';\r\n                    }\r\n                    else if(j > ceiling && j <= floor) {\r\n                        new_screen[j*this.props.width+i] = shade;\r\n                    }\r\n                    else {\r\n                        var b = 1.0 - ((j * 1.0 - this.props.height / 2.0) / (this.props.height /2.0)); \r\n                        if(b < 0.25)\r\n                            shade = '#';\r\n                        else if(b < 0.5)\r\n                            shade = 'x';\r\n                        else if(b < 0.75)\r\n                            shade = '.';\r\n                        else if(b < 0.9)\r\n                            shade = '-';\r\n                        else \r\n                            shade = '\\xa0';\r\n                        new_screen[j*this.props.width+i] = shade;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return  <div>\r\n                        <div style={{float: 'left', width: '155px'}}>\r\n                            <MiniMap map={this.map} height={this.mapHeight} width={this.mapWidth} x={this.state.playerX} y={this.state.playerY}/>\r\n                        </div>\r\n                        <div style={{float: 'left'}}>\r\n                            <ConsoleShooterRenderer screen={new_screen} width={this.props.width} height={this.props.height}/>\r\n                        </div>\r\n                    </div>\r\n      \r\n    }\r\n}\r\n\r\nfunction ConsoleShooterRenderer(props) {\r\n    console.log(props);\r\n    var lines = Array();\r\n    var line = '';\r\n    for(var i = 0; i < props.screen.length; i++) {\r\n        if(i % props.width == 0) {\r\n            lines.push(<div>{line}</div>);\r\n            line = ''\r\n        }\r\n        line += props.screen[i];\r\n    }\r\n    lines.push(<div>{line}</div>);\r\n\r\n    return <div>{lines}</div>;\r\n}\r\n\r\nfunction MiniMap(props) {\r\n    console.log(props.map);\r\n    var lines = [];\r\n    var line = ''; \r\n    for(var i = 0; i < props.map.length; i++) {\r\n        if(i % props.width == 0) {\r\n            lines.push(<div>{line}</div>);\r\n            line = '';\r\n        }\r\n\r\n        if(Math.floor(props.y) * props.width + Math.floor(props.x) === i)\r\n            line += 'P';\r\n        else\r\n            line += props.map[i];\r\n    }\r\n    lines.push(<div>{line}</div>);\r\n\r\n    return <div>{lines}</div>\r\n}\r\n\r\nexport default ConsoleShooter","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ConsoleShooter from './ConsoleShooter';\n\nvar h = 40;\nvar w = 120;\nvar s = 1.3;\n\nReactDOM.render(<ConsoleShooter width={w * s} height={h * s}/>, document.getElementById('root'));\n\nconsole.log(window.innerHeight);\nconsole.log(window.innerWidth);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}